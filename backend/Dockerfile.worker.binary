# Alternative Dockerfile using Node.js binary installation (more reliable)
FROM rocker/r-ver:4.3.2

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app

# Install Node.js using binary installation (more reliable than repository)
RUN apt-get update && apt-get install -y \
    wget \
    xz-utils \
    && rm -rf /var/lib/apt/lists/* \
    && wget -q https://nodejs.org/dist/v20.15.1/node-v20.15.1-linux-x64.tar.xz \
    && tar -xf node-v20.15.1-linux-x64.tar.xz -C /usr/local --strip-components=1 \
    && rm node-v20.15.1-linux-x64.tar.xz

# Install minimal system dependencies for R packages
RUN apt-get update && apt-get install -y \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy package files and install Node dependencies
COPY package*.json ./
RUN npm ci

# Copy application source
COPY . .

# Create optimized startup script - installs packages FAST
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "ðŸš€ Starting MicroBRSoil Worker (Ultra-Fast Mode)"\n\
echo "R version: $(R --version | head -1)"\n\
echo "Node version: $(node --version)"\n\
\n\
# Check if dada2 is available (core requirement)\n\
if Rscript -e "library(dada2)" 2>/dev/null; then\n\
  echo "âœ… Core packages ready"\n\
else\n\
  echo "ðŸ“¦ Installing core R packages (2-3 minutes)..."\n\
  \n\
  echo "Installing BiocManager..."\n\
  Rscript -e "install.packages(\"BiocManager\", repos=\"https://cloud.r-project.org\", Ncpus=2)"\n\
  \n\
  echo "Installing dada2 (this is the big one)..."\n\
  Rscript -e "BiocManager::install(\"dada2\", ask=FALSE, update=FALSE, Ncpus=2)"\n\
  \n\
  echo "Installing ggplot2..."\n\
  Rscript -e "install.packages(\"ggplot2\", repos=\"https://cloud.r-project.org\", Ncpus=2)"\n\
  \n\
  echo "âœ… Core packages installed - ready for pipelines!"\n\
fi\n\
\n\
echo "ðŸŽ¯ Starting worker process..."\n\
exec "$@"' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["npm", "run", "worker"]
