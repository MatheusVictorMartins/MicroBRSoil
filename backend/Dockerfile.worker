# Use Node.js base image
FROM node:20-bullseye

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app

# Install R 4.3.x (newer version) and essential libraries
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
     software-properties-common \
     dirmngr \
     wget \
     ca-certificates \
     gnupg2 \
  && wget -qO- https://cloud.r-project.org/bin/linux/debian/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_debian_key.asc \
  && echo "deb https://cloud.r-project.org/bin/linux/debian bullseye-cran40/" | tee -a /etc/apt/sources.list.d/cran.list \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
     r-base \
     r-base-dev \
     libcurl4-openssl-dev \
     libssl-dev \
     libxml2-dev \
     libgit2-dev \
     libfontconfig1-dev \
     libharfbuzz-dev \
     libfribidi-dev \
     libfreetype6-dev \
     libpng-dev \
     libtiff5-dev \
     libjpeg-dev \
     build-essential \
     gfortran \
  && rm -rf /var/lib/apt/lists/*

# Copy package files and install Node dependencies
COPY package*.json ./
RUN if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then \
      npm ci ; \
    else \
      npm install ; \
    fi

# Copy application source
COPY . .

# Create a startup script that handles R packages efficiently with proper dependency order
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "🚀 Starting MicroBRSoil Worker"\n\
echo "R version: $(R --version | head -1)"\n\
\n\
# Quick check if dada2 is available\n\
if Rscript -e "library(dada2)" 2>/dev/null; then\n\
  echo "✅ R packages are ready"\n\
else\n\
  echo "⚠️ Installing R packages (this may take a few minutes on first run)..."\n\
  \n\
  # Install packages in correct dependency order\n\
  echo "📦 Installing BiocManager..."\n\
  Rscript -e "if (!require(BiocManager, quietly=TRUE)) install.packages(\"BiocManager\", repos=\"https://cloud.r-project.org\")"\n\
  \n\
  echo "📦 Installing base dependencies..."\n\
  Rscript -e "install.packages(c(\"scales\", \"farver\", \"labeling\"), repos=\"https://cloud.r-project.org\")"\n\
  \n\
  echo "📦 Installing CRAN packages..."\n\
  Rscript -e "install.packages(c(\"ggplot2\", \"dplyr\", \"vegan\"), repos=\"https://cloud.r-project.org\", dependencies=TRUE)"\n\
  \n\
  echo "📦 Installing Bioconductor packages..."\n\
  Rscript -e "BiocManager::install(c(\"dada2\", \"phyloseq\"), ask=FALSE, update=FALSE)"\n\
  \n\
  # Verify installation\n\
  if Rscript -e "library(dada2); library(phyloseq); library(ggplot2)" 2>/dev/null; then\n\
    echo "✅ R packages installed successfully"\n\
  else\n\
    echo "❌ Failed to install R packages"\n\
    echo "Attempting to check what went wrong..."\n\
    Rscript -e "cat(\"Installed packages:\n\"); cat(paste(rownames(installed.packages()), collapse=\", \"))"\n\
    exit 1\n\
  fi\n\
fi\n\
\n\
echo "🎯 Starting worker process..."\n\
exec "$@"' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["npm", "run", "worker"]
