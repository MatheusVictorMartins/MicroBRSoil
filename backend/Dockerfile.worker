# Ultra-Fast R Package Installation - Minimal build time approach
FROM rocker/r-ver:4.3.2

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app

# Install curl and other essential tools first
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install system dependencies required for R package compilation
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    build-essential \
    gfortran \
    libbz2-dev \
    liblzma-dev \
    libpcre2-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    libssl3 \
    openssl \
    zlib1g-dev \
    libxml2-dev \
    libxml2-utils \
    libgit2-dev \
    libfontconfig1-dev \
    libcairo2-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    libfreetype6-dev \
    libpng-dev \
    libtiff5-dev \
    libjpeg-dev \
    libgsl-dev \
    libgmp-dev \
    libmpfr-dev \
    libglpk-dev \
    libudunits2-dev \
    libgdal-dev \
    libproj-dev \
    pkg-config \
    cmake \
    make \
    gcc \
    g++ \
    libc6-dev \
    libsodium-dev \
    libssh2-1-dev \
    libpq-dev \
    unixodbc-dev \
    python3 \
    python3-dev \
    python-is-python3 \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy package files and install Node dependencies
COPY backend/package*.json ./
# Install Node dependencies and ensure native modules are built for Linux
RUN npm ci --only=production && \
    npm rebuild bcrypt --build-from-source && \
    echo "Node.js dependencies installed and native modules rebuilt"

# Copy backend application source (excluding node_modules via .dockerignore)
COPY backend/ .

# Copy required R scripts from pipeline-r directory for build-time package installation
RUN mkdir -p /app/pipeline-r
COPY pipeline-r/ultra_fast_install_r_packages.R /app/pipeline-r/
COPY pipeline-r/verify_r_packages.R /app/pipeline-r/
COPY pipeline-r/check_system_deps.R /app/pipeline-r/

# Run system dependency check for debugging
RUN echo "üîç Checking system dependencies for R packages..." && \
    Rscript /app/pipeline-r/check_system_deps.R

# Install ONLY BiocManager at build time (< 30 seconds target)
# All other packages will be installed at runtime and cached in volume
RUN echo "‚ö° Installing BiocManager only (ultra-fast build)..." && \
    Rscript -e "options(repos = c(CRAN = 'https://cloud.r-project.org')); \
    install.packages('BiocManager'); \
    cat('‚úÖ BiocManager installed - other packages deferred to runtime\\n');" && \
    echo "‚úÖ Build-time R setup completed (ultra-fast mode)"

# Copy and set up entrypoint script
COPY backend/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["npm", "run", "worker"]
